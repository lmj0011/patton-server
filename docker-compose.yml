services:

  #
  # IMPORTANT!! 
  # Refer to these docs before attempting to scale up any services:
  # https://socket.io/docs/v4/using-multiple-nodes/#sticky-load-balancing (implemented)
  # https://socket.io/docs/v4/adapter/ (not implemented)
  #
  #
  nginx:
    image: lmj0011/patton-nginx:0.1
    restart: unless-stopped
    environment:
      NODE_SERVICE_HOST: "node"
    ports:
      - "8080:80"
    networks:
      - web
    scale: 1
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/healthcheck || exit 1"]
      interval: 1m30s
      timeout: 3s
      retries: 5
    depends_on:
      - node
      - redis


  node:
    image: lmj0011/patton-server:0.1
    restart: unless-stopped
    environment:
      REDIS_SERVICE_HOST: "redis"
    expose:
      - 3000
    networks:
      - web
      - backend
    scale: 1
    depends_on:
      - redis


  redis:
    image: redis:7.0.4
    restart: unless-stopped
    expose:
      - 6379
    networks:
      - backend
    scale: 1
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 30s
      timeout: 3s
      retries: 5

# https://docs.docker.com/compose/networking/#use-a-pre-existing-network
networks:
  web:
  backend: